---

public_ngenetzky_ansible_local:
  hosts:
    #localhost:
    ngenetzky-fit3:
  vars:
    ansible_connection: local
    ansible_python_interpreter: '{{ansible_playbook_python}}'
    ansible_ssh_host: localhost

public_ngenetzky_defaults_debops:
  children:
    public_ngenetzky_ansible_local:
  vars:
    public_ngenetzky_domain: 'genetzky.us'

debops_service_controller:
  children:
    public_ngenetzky_ansible_local:
  vars:
    controller__install_systemwide: False # default=True

public_ngenetzky_staging_grml:
  children:
    public_ngenetzky_ansible_local:
  vars:
      ferm__enabled: False
      apt__sources_deploy_state: "absent"
      system_users__self: False

public_ngenetzky_staging_debops:
  children:
    public_ngenetzky_ansible_local:
  vars:
    dhparam__deploy_state: absent
    dhparam__generate_cron: false
    dhparam__generate_init: false
    ferm__enabled: false
    ferm__iptables_backend_enabled: false
    journald__fss_enabled: false
    journald__fss_verify_key: null
    ldap__enabled: false
    ldap__device_ip_addresses: ''
    ldap__device_mac_addresses: ''
    machine__etc_issue_state: absent
    nullmailer__enabled: false
    netbase__hostname_config_enabled: False
    netbase__hosts_config_type: 'disabled'
    pki_acme: false
    pki_ca_domain: ''
    pki_ca_organization: ''
    pki_default_domain: ''
    pki_default_realms: []
    pki_enabled: false
    pki_internal: false
    pki_scheduler: false
    root_account__enabled: false
    root_account__generate_ssh_key: false
    root_account__password: '!'
    sshd__optional_packages: []
    system_users__default_accounts: []
    system_users__self: false
    system_users__self_name: 'root' # Must be set to avoid issue with 'Gather local Ansible user details'
    users__acl_enabled: false
    users__dotfiles_enabled: false
    users__enabled: false
    # yadm__base_packages: []
    # yadm__default_dotfiles: []
    # yadm__dotfiles_enabled: false

public_ngenetzky_defaults_debops_yadm:
  # children:
  #   public_ngenetzky_ansible_local:
  hosts:
    localhost:
  vars:
    yadm__dotfiles_enabled: True
    yadm__dotfiles_path: '{{
      (ansible_local.fhs.src | d("/usr/local/src"))
      + "/yadm" + "/github.com/ngenetzky/home.git"
      if yadm__dotfiles_enabled|bool else ""
    }}'
    yadm__default_dotfiles:
    - name: 'ngenetzky'
      git: 'https://github.com/ngenetzky/home'

debops_all_hosts:
  children:
    public_ngenetzky_staging_debops:
    # debops_service_bootstrap: # debops bootstrap
    # debops_service_core: # debops common
    #
    # debops_service_apt_install: # debops service/apt_install
    # debops_service_controller: # debops service/controller
    # debops_service_resources # debops service/resources
    # debops_service_yadm # debops service/yadm

  vars:
    apt_install__packages:
      - name:
          - "bash"
          - "shellcheck"
          - "tmux"
          - "vim-nox"

    # resources__src: '{{ inventory_dir | realpath + "/../resources/" }}'

    # Manage git repositories on all hosts in the Ansible inventory.
    # https://docs.debops.org/en/master/ansible/roles/resources/defaults-detailed.html#resources-repositories
    resources__repositories:
      # - repo: 'ssh://git@git.example.org:29418/namespace/repository.git'
      - repo: 'https://github.com/ypid/dotfiles.git'
        owner: 'root'
        dest: '/usr/local/src/github.com.ypid.dotfiles/'
        version: 'f5a97202f85124e70abe2e2dbfbdd3c5da5b4fbe'

    # List of shell commands which should be executed on all hosts in the Ansible inventory.
    # https://docs.debops.org/en/master/ansible/roles/resources/defaults-detailed.html#resources-ref-commands
    resources__commands:
      - name: '0_resources__commands'
        # executable: '/bin/bash' # default='/bin/bash'
        no_log: False
        script: |
          date --iso-8601=s >> /tmp/.ansible_debops_executed.log
          cd /usr/local/src/github.com.ypid.dotfiles/
          ./get
